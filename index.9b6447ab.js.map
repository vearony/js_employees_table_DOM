{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tableHeaders = document.querySelectorAll(\"thead th\");\nvar tableBody = document.querySelector(\"table\");\ntableHeaders.forEach(function(header, index) {\n    var isAscending = true;\n    header.addEventListener(\"click\", function() {\n        var rows = Array.from(tableBody.rows);\n        rows.sort(function(rowA, rowB) {\n            var cellA = rowA.cells[index].textContent.trim();\n            var cellB = rowB.cells[index].textContent.trim();\n            if (isAscending) return cellA.localeCompare(cellB, undefined, {\n                numeric: true\n            });\n            else return cellB.localeCompare(cellA, undefined, {\n                numeric: true\n            });\n        });\n        rows.forEach(function(row) {\n            return tableBody.appendChild(row);\n        });\n        isAscending = !isAscending;\n    });\n});\ndocument.querySelectorAll(\"tbody tr\").forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        document.querySelectorAll(\"tbody tr\").forEach(function(r) {\n            return r.classList.remove(\"active\");\n        });\n        row.classList.add(\"active\");\n    });\n});\nvar form = document.createElement(\"form\");\nform.className = \"new-employee-form\";\nform.innerHTML = '\\n  <label>Name: <input name=\"employeeName\" type=\"text\" data-qa=\"name\" required></label>\\n  <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required></label>\\n  <label>Office:\\n    <select name=\"office\" data-qa=\"office\" required>\\n      <option>Tokyo</option>\\n      <option>Singapore</option>\\n      <option>London</option>\\n      <option>New York</option>\\n      <option>Edinburgh</option>\\n      <option>San Francisco</option>\\n    </select>\\n  </label>\\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required></label>\\n  <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\" required></label>\\n  <button type=\"submit\">Save to table</button>\\n';\ndocument.body.appendChild(form);\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var employeeName = form.name.value.trim();\n    var position = form.position.value.trim();\n    var office = form.office.value;\n    var age = parseInt(form.age.value, 10);\n    var salary = parseFloat(form.salary.value);\n    if (!employeeName || !position || !office || isNaN(age) || isNaN(salary)) {\n        showNotification(\"error\", \"All fields are required\");\n        return;\n    }\n    if (employeeName.length < 4) {\n        showNotification(\"error\", \"Name must be at least 4 characters long\");\n        return;\n    }\n    if (age < 18 || age > 90) {\n        showNotification(\"error\", \"Age must be between 18 and 90\");\n        return;\n    }\n    if (isNaN(salary)) {\n        showNotification(\"error\", \"Salary must be a valid number\");\n        return;\n    }\n    var row = document.createElement(\"tr\");\n    row.innerHTML = \"\\n    <td>\".concat(employeeName, \"</td>\\n    <td>\").concat(position, \"</td>\\n    <td>\").concat(office, \"</td>\\n    <td>\").concat(age, \"</td>\\n    <td>$\").concat(salary.toLocaleString(\"en-US\"), \"</td>\\n  \");\n    document.querySelector(\"tbody\").appendChild(row);\n    showNotification(\"success\", \"Employee added successfully\");\n});\nfunction showNotification(type, message) {\n    var notification = document.createElement(\"div\");\n    if (type === \"error\") notification.className = \"error\";\n    else notification.className = \"success\";\n    notification.dataset.qa = \"notification\";\n    notification.textContent = message;\n    document.body.appendChild(notification);\n    setTimeout(function() {\n        return notification.remove();\n    }, 3000);\n}\ndocument.querySelectorAll(\"tbody td\").forEach(function(cell) {\n    cell.addEventListener(\"dblclick\", function() {\n        var initialValue = cell.textContent.trim();\n        var input = document.createElement(\"input\");\n        input.className = \"cell-input\";\n        input.value = initialValue;\n        cell.textContent = \"\";\n        cell.appendChild(input);\n        input.addEventListener(\"blur\", function() {\n            cell.textContent = input.value.trim() || initialValue;\n        });\n        input.addEventListener(\"keydown\", function(e) {\n            if (e.key === \"Enter\") input.blur();\n        });\n        input.focus();\n    });\n});\n\n//# sourceMappingURL=index.9b6447ab.js.map\n","'use strict';\n\nconst tableHeaders = document.querySelectorAll('thead th');\nconst tableBody = document.querySelector('table');\n\ntableHeaders.forEach((header, index) => {\n  let isAscending = true;\n\n  header.addEventListener('click', () => {\n    const rows = Array.from(tableBody.rows);\n\n    rows.sort((rowA, rowB) => {\n      const cellA = rowA.cells[index].textContent.trim();\n      const cellB = rowB.cells[index].textContent.trim();\n\n      if (isAscending) {\n        return cellA.localeCompare(cellB, undefined, { numeric: true });\n      } else {\n        return cellB.localeCompare(cellA, undefined, { numeric: true });\n      }\n    });\n\n    rows.forEach((row) => tableBody.appendChild(row));\n    isAscending = !isAscending;\n  });\n});\n\ndocument.querySelectorAll('tbody tr').forEach((row) => {\n  row.addEventListener('click', () => {\n    document\n      .querySelectorAll('tbody tr')\n      .forEach((r) => r.classList.remove('active'));\n    row.classList.add('active');\n  });\n});\n\nconst form = document.createElement('form');\n\nform.className = 'new-employee-form';\n\nform.innerHTML = `\n  <label>Name: <input name=\"employeeName\" type=\"text\" data-qa=\"name\" required></label>\n  <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required></label>\n  <label>Office:\n    <select name=\"office\" data-qa=\"office\" required>\n      <option>Tokyo</option>\n      <option>Singapore</option>\n      <option>London</option>\n      <option>New York</option>\n      <option>Edinburgh</option>\n      <option>San Francisco</option>\n    </select>\n  </label>\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required></label>\n  <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\" required></label>\n  <button type=\"submit\">Save to table</button>\n`;\n\ndocument.body.appendChild(form);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const employeeName = form.name.value.trim();\n  const position = form.position.value.trim();\n  const office = form.office.value;\n  const age = parseInt(form.age.value, 10);\n  const salary = parseFloat(form.salary.value);\n\n  if (!employeeName || !position || !office || isNaN(age) || isNaN(salary)) {\n    showNotification('error', 'All fields are required');\n\n    return;\n  }\n\n  if (employeeName.length < 4) {\n    showNotification('error', 'Name must be at least 4 characters long');\n\n    return;\n  }\n\n  if (age < 18 || age > 90) {\n    showNotification('error', 'Age must be between 18 and 90');\n\n    return;\n  }\n\n  if (isNaN(salary)) {\n    showNotification('error', 'Salary must be a valid number');\n\n    return;\n  }\n\n  const row = document.createElement('tr');\n\n  row.innerHTML = `\n    <td>${employeeName}</td>\n    <td>${position}</td>\n    <td>${office}</td>\n    <td>${age}</td>\n    <td>$${salary.toLocaleString('en-US')}</td>\n  `;\n  document.querySelector('tbody').appendChild(row);\n  showNotification('success', 'Employee added successfully');\n});\n\nfunction showNotification(type, message) {\n  const notification = document.createElement('div');\n\n  if (type === 'error') {\n    notification.className = 'error';\n  } else {\n    notification.className = 'success';\n  }\n\n  notification.dataset.qa = 'notification';\n  notification.textContent = message;\n  document.body.appendChild(notification);\n  setTimeout(() => notification.remove(), 3000);\n}\n\ndocument.querySelectorAll('tbody td').forEach((cell) => {\n  cell.addEventListener('dblclick', () => {\n    const initialValue = cell.textContent.trim();\n    const input = document.createElement('input');\n\n    input.className = 'cell-input';\n    input.value = initialValue;\n    cell.textContent = '';\n    cell.appendChild(input);\n\n    input.addEventListener('blur', () => {\n      cell.textContent = input.value.trim() || initialValue;\n    });\n\n    input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        input.blur();\n      }\n    });\n\n    input.focus();\n  });\n});\n"],"names":["tableHeaders","document","querySelectorAll","tableBody","querySelector","forEach","header","index","isAscending","addEventListener","rows","Array","from","sort","rowA","rowB","cellA","cells","textContent","trim","cellB","localeCompare","undefined","numeric","row","appendChild","r","classList","remove","add","form","createElement","showNotification","type","message","notification","className","dataset","qa","body","setTimeout","innerHTML","e","preventDefault","employeeName","name","value","position","office","age","parseInt","salary","parseFloat","isNaN","length","concat","toLocaleString","cell","initialValue","input","key","blur","focus"],"version":3,"file":"index.9b6447ab.js.map"}